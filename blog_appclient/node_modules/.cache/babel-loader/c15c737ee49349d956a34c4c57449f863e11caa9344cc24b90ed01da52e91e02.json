{"ast":null,"code":"//import a slice\nimport { createAsyncThunk, createSlice, current, isPending } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n//import the list from the external API\n\nexport let userAuthorSlice = createSlice({\n  name: \"userAuthorReducer\",\n  initialState: {\n    currentUser: {},\n    isPending: false,\n    errmsg: '',\n    errStatus: false,\n    isLogined: false\n  },\n  reducers: {\n    resetState: (state, action) => {\n      state.currentUser = {};\n      state.isPending = false;\n      state.isLogined = false;\n      state.errmsg = '';\n      state.errStatus = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(userAuthorSlice.pending, (state, action) => {\n      state.isPending = true;\n    }).addCase(userAuthorSlice.fullfilled, (state, action) => {\n      state.currentUser = action.payload.user;\n      state.isPending = false;\n      state.isLogined = true;\n      state.errmsg = '';\n      state.errStatus = false;\n    }).addCase(userAuthorSlice.rejected, (state, action) => {\n      state.isPending = false;\n      state.errmsg = action.payload;\n      state.errStatus = true;\n      state.isLogined = false;\n      state.currentUser = {};\n    });\n  }\n});\n\n//export the slice to the store\nexport default userAuthorSlice.reducer;\n\n//create the funcitons as actions creator functions\nexport let {\n  resetState\n} = userAuthorSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","current","isPending","axios","userAuthorSlice","name","initialState","currentUser","errmsg","errStatus","isLogined","reducers","resetState","state","action","extraReducers","builder","addCase","pending","fullfilled","payload","user","rejected","reducer","actions"],"sources":["C:/Users/heman/blog_app/blog_appclient/src/redux/slices/userauthorslice.js"],"sourcesContent":["//import a slice\r\nimport { createAsyncThunk, createSlice, current, isPending} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n//import the list from the external API\r\n\r\n\r\n\r\nexport let userAuthorSlice=createSlice(\r\n    {\r\n        name:\"userAuthorReducer\",\r\n        initialState:{currentUser:{},isPending:false,errmsg:'',errStatus:false,isLogined:false},\r\n        reducers:{\r\n            resetState:(state,action)=>{\r\n                state.currentUser={}\r\n                state.isPending=false\r\n                state.isLogined=false\r\n                state.errmsg=''\r\n                state.errStatus=false\r\n            }\r\n        },\r\n        extraReducers: builder=>{\r\n            builder.addCase(userAuthorSlice.pending,(state,action)=>{\r\n                state.isPending=true\r\n            })\r\n            .addCase(userAuthorSlice.fullfilled,(state,action)=>{\r\n                state.currentUser=action.payload.user\r\n                state.isPending=false\r\n                state.isLogined=true\r\n                state.errmsg=''\r\n                state.errStatus=false\r\n            })\r\n            .addCase(userAuthorSlice.rejected,(state,action)=>{\r\n                state.isPending=false\r\n                state.errmsg=action.payload\r\n                state.errStatus=true\r\n                state.isLogined=false\r\n                state.currentUser={}\r\n            })\r\n        }\r\n        \r\n    }\r\n)\r\n\r\n\r\n//export the slice to the store\r\nexport default userAuthorSlice.reducer\r\n\r\n//create the funcitons as actions creator functions\r\nexport let {resetState}=userAuthorSlice.actions"],"mappings":"AAAA;AACA,SAASA,gBAAgB,EAAEC,WAAW,EAAEC,OAAO,EAAEC,SAAS,QAAO,kBAAkB;AACnF,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAIA,OAAO,IAAIC,eAAe,GAACJ,WAAW,CAClC;EACIK,IAAI,EAAC,mBAAmB;EACxBC,YAAY,EAAC;IAACC,WAAW,EAAC,CAAC,CAAC;IAACL,SAAS,EAAC,KAAK;IAACM,MAAM,EAAC,EAAE;IAACC,SAAS,EAAC,KAAK;IAACC,SAAS,EAAC;EAAK,CAAC;EACvFC,QAAQ,EAAC;IACLC,UAAU,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MACvBD,KAAK,CAACN,WAAW,GAAC,CAAC,CAAC;MACpBM,KAAK,CAACX,SAAS,GAAC,KAAK;MACrBW,KAAK,CAACH,SAAS,GAAC,KAAK;MACrBG,KAAK,CAACL,MAAM,GAAC,EAAE;MACfK,KAAK,CAACJ,SAAS,GAAC,KAAK;IACzB;EACJ,CAAC;EACDM,aAAa,EAAEC,OAAO,IAAE;IACpBA,OAAO,CAACC,OAAO,CAACb,eAAe,CAACc,OAAO,EAAC,CAACL,KAAK,EAACC,MAAM,KAAG;MACpDD,KAAK,CAACX,SAAS,GAAC,IAAI;IACxB,CAAC,CAAC,CACDe,OAAO,CAACb,eAAe,CAACe,UAAU,EAAC,CAACN,KAAK,EAACC,MAAM,KAAG;MAChDD,KAAK,CAACN,WAAW,GAACO,MAAM,CAACM,OAAO,CAACC,IAAI;MACrCR,KAAK,CAACX,SAAS,GAAC,KAAK;MACrBW,KAAK,CAACH,SAAS,GAAC,IAAI;MACpBG,KAAK,CAACL,MAAM,GAAC,EAAE;MACfK,KAAK,CAACJ,SAAS,GAAC,KAAK;IACzB,CAAC,CAAC,CACDQ,OAAO,CAACb,eAAe,CAACkB,QAAQ,EAAC,CAACT,KAAK,EAACC,MAAM,KAAG;MAC9CD,KAAK,CAACX,SAAS,GAAC,KAAK;MACrBW,KAAK,CAACL,MAAM,GAACM,MAAM,CAACM,OAAO;MAC3BP,KAAK,CAACJ,SAAS,GAAC,IAAI;MACpBI,KAAK,CAACH,SAAS,GAAC,KAAK;MACrBG,KAAK,CAACN,WAAW,GAAC,CAAC,CAAC;IACxB,CAAC,CAAC;EACN;AAEJ,CACJ,CAAC;;AAGD;AACA,eAAeH,eAAe,CAACmB,OAAO;;AAEtC;AACA,OAAO,IAAI;EAACX;AAAU,CAAC,GAACR,eAAe,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}