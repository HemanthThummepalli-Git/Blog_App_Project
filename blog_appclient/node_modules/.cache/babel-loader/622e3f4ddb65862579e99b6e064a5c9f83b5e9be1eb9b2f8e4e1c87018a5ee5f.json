{"ast":null,"code":"//import a slice\nimport{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";import axios from\"axios\";import{toast}from\"react-toastify\";//import the list from the external API\nexport const userAuthorPromise=createAsyncThunk(\"user-author-data\",async(userCredObj,thunkApi)=>{try{if(userCredObj.usertype=='User'){//make http post request from the redux\nconst res=await axios.post('http://localhost:4000/user-api/login',userCredObj);if(res.data.message==\"Login success\"){//store the token in the local/session storage\nlocalStorage.setItem('token',res.data.token);// toast notification\ntoast.success('Login Successful !');}else{toast.error('Login failed');return thunkApi.rejectWithValue(res.data.message);}return res.data;}if(userCredObj.usertype=='Author'){//make the http post request fom the author \nlet res=await axios.post('http://localhost:4000/author-api/login',userCredObj);if(res.data.message==\"Login success\"){//store the token in the local storage\nlocalStorage.setItem('token',res.data.token);toast.success('Login Successful !');}else{toast.error('Login failed');return thunkApi.rejectWithValue(res.data.message);}return res.data;}}catch(err){return thunkApi.rejectWithValue(err);}});export let userAuthorSlice=createSlice({name:\"userAuthorReducer\",initialState:{currentUser:{},isPending:false,errmsg:'',errStatus:false,isLogined:false,usertype:\"\"},reducers:{resetState:(state,action)=>{state.currentUser={};state.isPending=false;state.isLogined=false;state.errmsg='';state.errStatus=false;state.usertype=\"\";}},extraReducers:builder=>builder.addCase(userAuthorPromise.pending,(state,action)=>{state.isPending=true;}).addCase(userAuthorPromise.fulfilled,(state,action)=>{state.currentUser=action.payload.user;state.isPending=false;state.isLogined=true;state.errmsg='';state.errStatus=false;state.usertype=action.payload.user.usertype;}).addCase(userAuthorPromise.rejected,(state,action)=>{state.isPending=false;state.errmsg=action.payload;state.errStatus=true;state.isLogined=false;state.currentUser={};})});//export the slice to the store\nexport default userAuthorSlice.reducer;//create the funcitons as actions creator functions\nexport let{resetState}=userAuthorSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","toast","userAuthorPromise","userCredObj","thunkApi","usertype","res","post","data","message","localStorage","setItem","token","success","error","rejectWithValue","err","userAuthorSlice","name","initialState","currentUser","isPending","errmsg","errStatus","isLogined","reducers","resetState","state","action","extraReducers","builder","addCase","pending","fulfilled","payload","user","rejected","reducer","actions"],"sources":["C:/Users/heman/Blog_Toast/blog_toast/blog_appclient/src/redux/slices/userauthorslice.js"],"sourcesContent":["//import a slice\r\nimport { createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//import the list from the external API\r\nexport const userAuthorPromise=createAsyncThunk(\"user-author-data\",async (userCredObj,thunkApi)=>{\r\n    try{\r\n        if(userCredObj.usertype=='User'){\r\n            //make http post request from the redux\r\n            const res=await axios.post('http://localhost:4000/user-api/login',userCredObj)\r\n            if(res.data.message==\"Login success\"){\r\n                //store the token in the local/session storage\r\n                localStorage.setItem('token',res.data.token)\r\n                // toast notification\r\n                toast.success('Login Successful !')\r\n            }else{\r\n                toast.error('Login failed')\r\n                return thunkApi.rejectWithValue(res.data.message)\r\n            }\r\n            return res.data\r\n        }\r\n        if(userCredObj.usertype=='Author'){\r\n            //make the http post request fom the author \r\n            let res=await axios.post('http://localhost:4000/author-api/login',userCredObj)\r\n            if(res.data.message==\"Login success\"){\r\n                //store the token in the local storage\r\n                localStorage.setItem('token',res.data.token)\r\n                toast.success('Login Successful !')\r\n            }else{\r\n                toast.error('Login failed')\r\n                return thunkApi.rejectWithValue(res.data.message)\r\n            }\r\n            return res.data\r\n        }\r\n    }catch(err){\r\n        return thunkApi.rejectWithValue(err)\r\n    } \r\n})\r\n\r\n\r\nexport let userAuthorSlice=createSlice(\r\n    {\r\n        name:\"userAuthorReducer\",\r\n        initialState:{currentUser:{},isPending:false,errmsg:'',errStatus:false,isLogined:false,usertype:\"\"},\r\n        reducers:{\r\n            resetState:(state,action)=>{\r\n                state.currentUser={}\r\n                state.isPending=false\r\n                state.isLogined=false\r\n                state.errmsg=''\r\n                state.errStatus=false\r\n                state.usertype=\"\"\r\n                \r\n            }\r\n        },\r\n        extraReducers: builder=>\r\n            builder.addCase(userAuthorPromise.pending,(state,action)=>{\r\n                state.isPending=true\r\n            })\r\n            .addCase(userAuthorPromise.fulfilled,(state,action)=>{\r\n                \r\n                state.currentUser=action.payload.user\r\n                state.isPending=false\r\n                state.isLogined=true\r\n                state.errmsg=''\r\n                state.errStatus=false\r\n                state.usertype=action.payload.user.usertype\r\n            })\r\n            .addCase(userAuthorPromise.rejected,(state,action)=>{\r\n                state.isPending=false\r\n                state.errmsg=action.payload\r\n                state.errStatus=true\r\n                state.isLogined=false\r\n                state.currentUser={}\r\n            })\r\n        \r\n        \r\n    }\r\n)\r\n\r\n\r\n//export the slice to the store\r\nexport default userAuthorSlice.reducer\r\n\r\n//create the funcitons as actions creator functions\r\nexport let {resetState}=userAuthorSlice.actions"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}